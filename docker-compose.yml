version: '3'

services:
  #
  # Project reverse proxy
  nginx-proxy:
    image: ${COMPOSE_PROJECT_NAME}_proxy:latest
    container_name: ${COMPOSE_PROJECT_NAME}_proxy
    restart: unless-stopped
    expose:
      - "80"
    depends_on:
      - portainer
      - filebrowser
      - homepage
    build:
      context: ./config/nginx-proxy/hub
    environment:
      - DHPARAM_GENERATION=false
      - VIRTUAL_PORT=80
      - VIRTUAL_HOST=hub.ensg-sdi.docker
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      elabs-revproxy:
        ipv4_address: 172.24.0.2

  #
  # Portainer docker admin GUI
  portainer:
    image: portainer/portainer-ce:latest
    container_name: ${COMPOSE_PROJECT_NAME}_portainer
    restart: unless-stopped
    expose:
      - "9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer-data:/data
    networks:
      elabs-revproxy:
        ipv4_address: 172.24.0.3

  #
  # SDI Access hub
  homepage:
    image: ghcr.io/benphelps/homepage:latest
    container_name: ${COMPOSE_PROJECT_NAME}_homepage
    restart: unless-stopped
    expose:
      - "3000"
    volumes:
      - ./config/homepage:/app/config
      - homepage-public:/app/public
    networks:
      elabs-revproxy:
        ipv4_address: 172.24.0.4

  #
  # File browser
  # See https://github.com/hurlenko/filebrowser-docker for more information
  filebrowser:
    image: hurlenko/filebrowser
    container_name: ${COMPOSE_PROJECT_NAME}_filebrowser
    restart: unless-stopped
    environment:
      - PUID=$(id -u)
      - PGID=$(id -g)
      - FB_BASEURL=/data
      # The list of avalable options can be found here : https://filebrowser.org/cli/filebrowser#options.
    expose:
      - "443:8080" 
    volumes:
      - ./data/filebrowser/filebrowser.db:/database/filebrowser.db 
      - ./data/filebrowser/config:/config/
      # Place here volume to be displayed and accessible within Filebrowser interface
      - ./data/_files_geoserver:/data/fichiers-geoserver
      - ./data/_files_common:/data/fichiers
      # Place here legacy volumes from other containers
      - postgis-data:/data/postgis
      - geoserver-data:/data/geoserver/data
      - geoserver-injected-data:/data/geoserver/injected-files
      - geoserver-settings:/data/geoserver/settings
      - mviewer-base:/data/mviewer
      - ./data/jupyterlab/content:/data/jupyter
      - ./config/pygeoapi/:/data/pygeoapi
    networks:
      elabs-revproxy:
        ipv4_address: 172.24.0.5

  ############
  #
  # Applis mÃ©tier de la miniIDG 
  #
  # -> PostGIS
  postgis:
    image: kartoza/postgis:${POSTGIS_VERSION}
    container_name: ${COMPOSE_PROJECT_NAME}_postgis
    restart: on-failure
    expose:
      - "${POSTGRES_PORT}:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASS=${POSTGRES_PASS}
      - ALLOW_IP_RANGE=${ALLOW_IP_RANGE}
      - FORCE_SSL=FALSE
    volumes:
      - postgis-data:/var/lib/postgresql
    healthcheck:
      test: "PGPASSWORD=${POSTGRES_PASS} pg_isready -h 127.0.0.1 -U ${POSTGRES_USER} -d ${POSTGRES_DB}"
    networks:
      elabs-revproxy:
        ipv4_address: 172.24.10.1

  # -> pgAdmin
  pgadmin:
    container_name: ${COMPOSE_PROJECT_NAME}_pgadmin
    restart: always
    build:
      context: ./config/pgadmin
    expose:
      - "5050:80"
    depends_on:
      postgis:
        condition: service_healthy
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_MAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      elabs-revproxy:
        ipv4_address: 172.24.10.2

  # -> Geo server
  geoserver:
    container_name: ${COMPOSE_PROJECT_NAME}_geoserver
    image: kartoza/geoserver:${GS_VERSION}
    expose:
      - "8080"
    depends_on:
      postgis:
        condition: service_healthy
    environment:
      - GEOSERVER_ADMIN_PASSWORD=${GEOSERVER_ADMIN_PASSWORD}
      - GEOSERVER_ADMIN_USER=${GEOSERVER_ADMIN_USER}
      - INITIAL_MEMORY=${INITIAL_MEMORY}
      - MAXIMUM_MEMORY=${MAXIMUM_MEMORY}
      - GEOSERVER_DATA_DIR=${GEOSERVER_DATA_DIR}
      - GEOWEBCACHE_CACHE_DIR=${GEOWEBCACHE_CACHE_DIR}
      - ROOT_WEBAPP_REDIRECT=${ROOT_WEBAPP_REDIRECT}
      - TOMCAT_EXTRAS=${TOMCAT_EXTRAS}
      - SAMPLE_DATA=${SAMPLE_DATA}
      # Extensions set to be installed
      - STABLE_EXTENSIONS=${STABLE_EXTENSIONS}
      - COMMUNITY_EXTENSIONS=${COMMUNITY_EXTENSIONS}
    volumes:
      - geoserver-data:/opt/geoserver/data_dir
      - geoserver-injected-data:/opt/geoserver/data_dir/injected
      - geoserver-settings:/settings
    healthcheck:
      test: "curl --fail --silent --write-out 'HTTP CODE : %{http_code}\n' --output /dev/null -u ${GEOSERVER_ADMIN_USER}:'${GEOSERVER_ADMIN_PASSWORD}' http://localhost:8080/geoserver/rest/about/version.xml"
      interval: 1m30s
      timeout: 10s
      retries: 3
    networks:
      elabs-revproxy:
        ipv4_address: 172.24.10.3
  
  # -> mViewer
  mviewer:
    build: ./mviewer
    container_name: ${COMPOSE_PROJECT_NAME}_apps-mviewer
    restart: unless-stopped
    expose:
      - "80"
    volumes:
      - mviewer-base:/usr/share/nginx/html/
    networks:
      elabs-revproxy:
        ipv4_address: 172.24.10.4

  #  -> MapStore2
  mapstore2:
    image: geosolutionsit/mapstore2:latest
    container_name: ${COMPOSE_PROJECT_NAME}_mapstore2
    restart: unless-stopped
    expose: 
      - "8080"
    networks:
      elabs-revproxy:
        ipv4_address: 172.24.10.5

  # -> JupyterLab
  # Inspired from https://github.com/nezhar/jupyter-docker-compose
  jupyterlab:
    container_name: ${COMPOSE_PROJECT_NAME}_jupyterlab
    image: ${COMPOSE_PROJECT_NAME}_jupyter:latest
    build: 
      context: ./config/jupyterlab
    expose:
      - "8888:8888"
    volumes:
      - ./data/jupyterlab/content:/jupyter/content:rw
    command: "start-notebook.sh --NotebookApp.token="
    environment:
      # From https://discourse.jupyter.org/t/jupyterlab-permissions-in-docker-compose/22796/2
      - NB_UID=$(id -u)
      - NB_GID=$(id -g)
    networks:
      elabs-revproxy:
        ipv4_address: 172.24.10.6

  # -> pygeoAPI
  pygeoapi:
    container_name: ${COMPOSE_PROJECT_NAME}_pygeoapi
    image: geopython/pygeoapi:latest
    restart: unless-stopped
    expose:
      - "80"
    environment:
      - VIRTUAL_HOST=api.ensg-sdi.docker
    volumes:
      - ./config/pygeoapi/ensg-config.yml:/pygeoapi/local.config.yml:ro
    networks:
      elabs-revproxy:
        ipv4_address: 172.24.20.4

volumes:
  vhost.d:
  homepage-public:
  portainer-data:
  # -> postgis
  postgis-data:
  pgadmin-data:
  # -> geoserver
  geoserver-data:
  geoserver-injected-data:
  geoserver-settings:

networks:
  elabs-revproxy:
    name: ${APPS_NETWORK}
    external: true
    ipam:
      config:
        - subnet: "172.24.0.0/16"
